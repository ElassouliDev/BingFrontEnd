<?php

namespace App\Models;

use App\Notifications\AcceptOrderNotification;
use App\Notifications\AddNewBalanceNotification;
use App\Notifications\ApproveBranchNotification;
use App\Notifications\ApproveOfferNotification;
use App\Notifications\ApproveOrderNotification;
use App\Notifications\CancelOrderNotification;
use App\Notifications\CompleteOrderNotification;
use App\Notifications\ContactUsNotification;
use App\Notifications\NewBranchNotification;
use App\Notifications\NewOrderNotification;
use App\Notifications\RateOrderNotification;
use App\Notifications\ReadyOrderNotification;
use App\Notifications\RejectOfferNotification;
use App\Notifications\RejectOrderNotification;
use App\Traits\FormatsDate;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Auth;

class Notification extends Model
{
    use SoftDeletes;

    public $incrementing = false;
    protected $table = 'notifications';
    protected $fillable = ['id', 'type', 'notifiable_id', 'notifiable_type', 'data', 'read_at', 'created_at'];

    protected $appends = ['seen'];
    protected $casts = ['data' => 'array'];
    protected $hidden = [
        'created_at', 'updated_at', 'deleted_at',
    ];

    protected static function boot()
    {
        parent::boot(); //  Change the autogenerated stub
        static::addGlobalScope('orderedBy', function (Builder $builder) {
            $builder->orderBy('ordered')->latest('updated_at');
        });

        if (request()->is('api/*')) {
            static::addGlobalScope('notDraft', function (Builder $builder) {
                $builder->where('draft', false);
            });
        }

    }

    public function notifiable()
    {
        return $this->morphTo();
    }

    public function recipient()
    {
        return $this->belongsTo(User::class, 'notifiable_id');
    }

    public function getSeenAttribute()
    {
        return $this->read_at;
    }

    public function scopeNotSeen($query)
    {
        return $query->whereNull('read_at');
    }

    public function getTitleAttribute()
    {
        return $this->data['title'][lang()];
    }

    public function getBodyAttribute()
    {
        return $this->data['body'][lang()];
    }

    public function getBranchNameAttribute()
    {
        if (in_array($this->type, [
            NewOrderNotification::class, AcceptOrderNotification::class, ReadyOrderNotification::class,
            CompleteOrderNotification::class, CancelOrderNotification::class])) {
            $orderId = $this->data['others']['id'];
            $order = Order::query()->withoutGlobalScope('paidOrder')->find($orderId);
            return optional(optional($order)->branch)->name;
        } else {
            return null;
        }
    }

    public function getIconAttribute()
    {
        if (in_array($this->type, [
            NewOrderNotification::class, AcceptOrderNotification::class, ReadyOrderNotification::class,
            CompleteOrderNotification::class, CancelOrderNotification::class])) {
            $orderId = $this->data['others']['id'];
            $order = Order::query()->withoutGlobalScope('paidOrder')->find($orderId);
            return optional(optional($order)->branch)->cover;
        } else {
            return asset('icon.jpeg');
        }
    }

    public function getActionButtonsAttribute()
    {
        if (Auth::guard('manager')->check()) {
            $button = '';
            $button .= '<a href="' . route('manager.notification.show', $this->id) . '" class="btn btn-icon btn-danger "><i class="la la-eye"></i></a> ';
            $button .= '<button type="button" data-id="' . $this->id . '" data-toggle="modal" data-target="#notifyDeleteModel" class="notifyDeleteRecord btn btn-icon btn-danger"><i class="la la-trash"></i></button>';
            return $button;
        } elseif (Auth::guard('merchant')->check()) {
            $button = '';
            $button .= '<a href="' . route('restaurant.notification.show', $this->id) . '" class="btn btn-icon btn-danger "><i class="la la-eye"></i></a> ';
            $button .= '<button type="button" data-id="' . $this->id
                . '" data-toggle="modal" data-target="#notifyDeleteModel" class="deleteRecord btn btn-icon btn-danger"><i class="la la-trash"></i></button>';
            return $button;
        } elseif (Auth::guard('branch')->check()) {
            $button = '';
            $button .= '<a href="' . route('branch.notification.show', $this->id) . '" class="btn btn-icon btn-danger "><i class="la la-eye"></i></a> ';
            $button .= '<button type="button" data-id="' . $this->id . '" data-toggle="modal" data-target="#notifyDeleteModel" class="notifyDeleteRecord btn btn-icon btn-danger"><i class="la la-trash"></i></button>';
            return $button;
        }
    }
}
