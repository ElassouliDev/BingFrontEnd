<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;

class OrderItem extends Model
{
    use SoftDeletes;

    protected $guarded = [];

    protected static function boot()
    {
        parent::boot(); //  Change the autogenerated stub
        static::addGlobalScope('orderedBy', function (Builder $builder) {
            $builder->orderBy('ordered');
        });

        if (request()->is('api/*')) {
            static::addGlobalScope('notDraft', function (Builder $builder) {
                $builder->where('draft', false);
            });
        }

    }

//    Relations
    public function order()
    {
        return $this->belongsTo(Order::class);
    }
    public function item()
    {
        return $this->belongsTo(Item::class);
    }
    public function item_price()
    {
        return $this->belongsTo(ItemPrice::class);
    }
    public function order_item_addons()
    {
        return $this->hasMany(OrderItemAddon::class);
    }


//    Attributes
    public function getTotalAddonAttribute()
    {
        $total = 0;
        foreach ($this->order_item_addons as $item)
        {
            $total += $item->amount;
        }
        return $total;
    }
}
